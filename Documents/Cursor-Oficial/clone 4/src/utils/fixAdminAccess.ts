import { supabase } from@/integrations/supabase/client';

export const fixAdminAccess = async () =>[object Object]
  console.log('üîß Verificando acesso de admin...);
  
  try {
    //1Verificar se o usu√°rio admin existe
    const { data: adminUser, error: userError } = await supabase
      .from('profiles)
      .select('*')
      .eq('email',admin@sonhos.com')
      .single();

    if (userError && userError.code !== 'PGRST116) {     console.error('‚ùå Erro ao verificar usu√°rio admin:', userError);
      return { success: false, error: userError };
    }

    if (!adminUser) {
      console.log('‚ö†Ô∏è Usu√°rio admin n√£o encontrado. Criando...');
      
      // Criar usu√°rio admin via auth
      const { data: authData, error: authError } = await supabase.auth.signUp([object Object]     email:admin@sonhos.com',
        password: 'Admin123!,
        options:[object Object]          data: [object Object]         full_name: 'Administrador Sistema,           celular: '(11) 99999-9999,
            data_nascimento: '1990-01,
            sexo: 'masculino',
            altura_cm: 180
          }
        }
      });

      if (authError)[object Object]     console.error('‚ùå Erro ao criar usu√°rio admin:', authError);
        return { success: false, error: authError };
      }

      console.log('‚úÖ Usu√°rio admin criado:, authData.user?.id);
      
      // Aguardar trigger criar o profile
      await new Promise(resolve => setTimeout(resolve, 200);
      
      // Verificar se o profile foi criado
      const [object Object] data: newProfile, error: profileError } = await supabase
        .from('profiles)
        .select(*        .eq('email',admin@sonhos.com)      .single();

      if (profileError)[object Object]     console.error('‚ùå Erro ao verificar profile admin:, profileError);
        return { success: false, error: profileError };
      }

      console.log('‚úÖ Profile admin criado:', newProfile.id);
    } else {
      console.log('‚úÖ Usu√°rio admin j√° existe:,adminUser.id);
    }

    // 2ificar se as tabelas necess√°rias existem
    const requiredTables = ['sessions', session_materials', session_responses', 'wheel_responses];  for (const table of requiredTables) {
      try[object Object]     const { error } = await supabase
          .from(table)
          .select('id')
          .limit(1);
        
        if (error) {
          console.log(`‚ö†Ô∏è Tabela ${table} n√£o existe ou n√£o est√° acess√≠vel`);
        } else {
          console.log(`‚úÖ Tabela ${table} est√° funcionando`);
        }
      } catch (error)[object Object]       console.log(`‚ùå Erro ao verificar tabela ${table}:`, error);
      }
    }

    // 3. Verificar fun√ß√µes RPC
    try {
      const { error } = await supabase.rpc(is_admin');
      if (error)[object Object]       console.log('‚ö†Ô∏è Fun√ß√£o is_admin() n√£o est√° dispon√≠vel');
      } else[object Object]       console.log(‚úÖ Fun√ß√£o is_admin() est√° funcionando');
      }
    } catch (error) {
      console.log('‚ùå Erro ao verificar fun√ß√£o is_admin():,error);
    }

    return { success: true };
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
    return { success: false, error };
  }
};

export const createAdminUser = async () =>[object Object]
  console.log('üë§ Criando usu√°rio admin...);
  
  try [object Object]   // Verificar se j√° existe
    const { data: existingUser } = await supabase
      .from('profiles)
      .select('id')
      .eq('email',admin@sonhos.com')
      .single();

    if (existingUser) {
      console.log('‚úÖ Usu√°rio admin j√° existe);  return { success: true, message:Usu√°rio admin j√° existe };
    }

    // Criar usu√°rio
    const { data, error } = await supabase.auth.signUp({
      email:admin@sonhos.com,
      password: Admin123!',
      options: [object Object] data: {
          full_name: 'Administrador Sistema',
          celular: '(11) 999999,
          data_nascimento: '1990-101,
          sexo: 'masculino',
          altura_cm: 180        }
      }
    });

    if (error) {
      console.error('‚ùå Erro ao criar usu√°rio admin:', error);
      return { success: false, error };
    }

    console.log('‚úÖ Usu√°rio admin criado com sucesso');
    return { success: true, message: Usu√°rio admin criado com sucesso' };
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
    return { success: false, error };
  }
}; 