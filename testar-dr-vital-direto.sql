-- üß™ TESTAR DR. VITAL DIRETAMENTE
-- Execute este script no SQL Editor do Supabase

-- 1. OBTER USER_ID DO RAFAEL
DO $$
DECLARE
    rafael_user_id UUID;
    test_result JSONB;
BEGIN
    -- Buscar o user_id do Rafael
    SELECT user_id INTO rafael_user_id 
    FROM profiles 
    WHERE email = 'rafael.ids@icloud.com';
    
    IF rafael_user_id IS NULL THEN
        RAISE NOTICE '‚ùå Rafael n√£o encontrado!';
        RETURN;
    END IF;
    
    RAISE NOTICE '‚úÖ Rafael encontrado. User ID: %', rafael_user_id;
    
    -- 2. VERIFICAR SE EXISTEM DADOS PARA AN√ÅLISE
    RAISE NOTICE '';
    RAISE NOTICE 'üìä VERIFICANDO DADOS:';
    
    -- Verificar peso
    DECLARE
        peso_count INTEGER;
    BEGIN
        SELECT COUNT(*) INTO peso_count FROM weight_measurements WHERE user_id = rafael_user_id;
        RAISE NOTICE '   - Peso: % medi√ß√µes', peso_count;
    END;
    
    -- Verificar metas
    DECLARE
        metas_count INTEGER;
    BEGIN
        SELECT COUNT(*) INTO metas_count FROM user_goals WHERE user_id = rafael_user_id;
        RAISE NOTICE '   - Metas: % metas', metas_count;
    END;
    
    -- Verificar anamnese
    DECLARE
        anamnese_count INTEGER;
    BEGIN
        SELECT COUNT(*) INTO anamnese_count FROM anamnesis WHERE user_id = rafael_user_id;
        RAISE NOTICE '   - Anamnese: % registros', anamnese_count;
    END;
    
    -- 3. VERIFICAR CONFIGURA√á√ÉO DE IA
    RAISE NOTICE '';
    RAISE NOTICE 'ü§ñ VERIFICANDO CONFIGURA√á√ÉO DE IA:';
    
    DECLARE
        ai_config RECORD;
    BEGIN
        SELECT * INTO ai_config FROM ai_configurations 
        WHERE functionality = 'medical_analysis' 
           OR personality = 'drvital'
        LIMIT 1;
        
        IF ai_config IS NOT NULL THEN
            RAISE NOTICE '   - Funcionalidade: %', ai_config.functionality;
            RAISE NOTICE '   - Servi√ßo: %', ai_config.service;
            RAISE NOTICE '   - Modelo: %', ai_config.model;
            RAISE NOTICE '   - Ativo: %', ai_config.is_enabled;
            RAISE NOTICE '   - Personalidade: %', ai_config.personality;
        ELSE
            RAISE NOTICE '   ‚ùå Nenhuma configura√ß√£o de IA encontrada!';
        END IF;
    END;
    
    -- 4. TESTE DE ACESSO √ÄS TABELAS
    RAISE NOTICE '';
    RAISE NOTICE 'üõ°Ô∏è TESTANDO ACESSO √ÄS TABELAS:';
    
    -- Teste ai_configurations
    BEGIN
        SELECT COUNT(*) INTO test_result FROM ai_configurations WHERE functionality = 'medical_analysis';
        RAISE NOTICE '   ‚úÖ ai_configurations: Acesso OK';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE '   ‚ùå ai_configurations: Erro de acesso - %', SQLERRM;
    END;
    
    -- Teste weight_measurements
    BEGIN
        SELECT COUNT(*) INTO test_result FROM weight_measurements WHERE user_id = rafael_user_id;
        RAISE NOTICE '   ‚úÖ weight_measurements: Acesso OK';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE '   ‚ùå weight_measurements: Erro de acesso - %', SQLERRM;
    END;
    
    -- Teste user_goals
    BEGIN
        SELECT COUNT(*) INTO test_result FROM user_goals WHERE user_id = rafael_user_id;
        RAISE NOTICE '   ‚úÖ user_goals: Acesso OK';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE '   ‚ùå user_goals: Erro de acesso - %', SQLERRM;
    END;
    
    -- 5. VERIFICAR SE A FUN√á√ÉO EXISTE
    RAISE NOTICE '';
    RAISE NOTICE 'üîß VERIFICANDO FUN√á√ÉO DR-VITAL-ENHANCED:';
    
    DECLARE
        function_exists BOOLEAN;
    BEGIN
        SELECT EXISTS (
            SELECT 1 FROM pg_proc p
            JOIN pg_namespace n ON p.pronamespace = n.oid
            WHERE n.nspname = 'public' 
              AND proname = 'dr-vital-enhanced'
        ) INTO function_exists;
        
        IF function_exists THEN
            RAISE NOTICE '   ‚úÖ Fun√ß√£o dr-vital-enhanced existe';
        ELSE
            RAISE NOTICE '   ‚ùå Fun√ß√£o dr-vital-enhanced N√ÉO existe!';
        END IF;
    END;
    
    -- 6. RECOMENDA√á√ïES
    RAISE NOTICE '';
    RAISE NOTICE 'üí° RECOMENDA√á√ïES:';
    RAISE NOTICE '   1. Verifique se a vari√°vel OPENAI_API_KEY est√° configurada';
    RAISE NOTICE '   2. Acesse: https://supabase.com/dashboard/project/hlrkoyywjpckdotimtik/settings/functions';
    RAISE NOTICE '   3. Adicione: OPENAI_API_KEY=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';
    RAISE NOTICE '   4. Verifique logs em: https://supabase.com/dashboard/project/hlrkoyywjpckdotimtik/functions/dr-vital-enhanced/logs';
    RAISE NOTICE '';
    RAISE NOTICE 'üß™ TESTE MANUAL:';
    RAISE NOTICE '   curl -X POST https://hlrkoyywjpckdotimtik.supabase.co/functions/v1/dr-vital-enhanced';
    RAISE NOTICE '   -H "Content-Type: application/json"';
    RAISE NOTICE '   -H "Authorization: Bearer SEU_TOKEN"';
    RAISE NOTICE '   -d "{\"message\":\"teste\",\"userId\":\"%"}', rafael_user_id;
    
END $$;

-- 7. VERIFICAR VARI√ÅVEIS DE AMBIENTE (se poss√≠vel)
SELECT 
  'üîë VARI√ÅVEIS DE AMBIENTE:' as info,
  'Para verificar vari√°veis de ambiente:' as instruction,
  '1. Acesse: https://supabase.com/dashboard/project/hlrkoyywjpckdotimtik/settings/functions' as step1,
  '2. Verifique se OPENAI_API_KEY est√° configurada' as step2,
  '3. Se n√£o estiver, adicione a vari√°vel' as step3;

-- 8. VERIFICAR LOGS DE ERRO
SELECT 
  'üìù LOGS DE ERRO:' as info,
  'Para verificar logs de erro:' as instruction,
  'https://supabase.com/dashboard/project/hlrkoyywjpckdotimtik/functions/dr-vital-enhanced/logs' as log_url;
